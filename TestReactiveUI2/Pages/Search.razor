@page "/search"
@using TestReactiveUI2.ViewModels
@inherits ReactiveComponentBase<SearchViewModel>

<div class="form-check mb-3">
    <input type="checkbox"
           class="form-check-input"
           @bind-value="ViewModel.IsSearchEnabled"
           id="enableSearch" />
    <label class="form-check-label" for="enableSearch">
        Enable Search
    </label>
</div>

<div class="search-box">
    <input type="text"
           @bind-value="ViewModel.SearchTerm"
           @bind-value:event="oninput"
           placeholder="Type to search..."
           class="form-control" />

    @if (!ViewModel.IsSearchEnabled && !string.IsNullOrEmpty(ViewModel.SearchTerm))
    {
        <div class="text-muted mt-2">
            Enable search using the checkbox to perform search operations
        </div>
    }

</div>

@if (ViewModel.IsSearching)
{
    <div class="mt-3">Searching...</div>
}

@if (ViewModel.SearchResults?.Any() == true)
{
    <div class="mt-3">
        @foreach (var result in ViewModel.SearchResults)
        {
            <div>@result.Title</div>
        }
    </div>
}

@code {
    protected override void OnInitialized()
    {
        ViewModel = new SearchViewModel();
        base.OnInitialized();
    }
}