@page "/admin-product"
@using ReactiveAndFodyTst.Client.ViewModels
@using ReactiveUI.Blazor
@inherits ReactiveComponentBase<AdminProductViewModel>
@inject AdminProductViewModel ViewModel

<h3>Add New Product</h3>

<div class="card">
    <div class="card-body">
        <div class="form-group">
            <label>Name:</label>
            <input type="text" class="form-control" @bind-value="ViewModel.Name" @bind-value:event="oninput" />
        </div>

        <div class="form-group">
            <label>Description:</label>
            <textarea class="form-control" @bind-value="ViewModel.Description" @bind-value:event="oninput"></textarea>
        </div>

        <div class="form-group">
            <label>Price:</label>
            <input type="number" class="form-control" @bind-value="ViewModel.Price" @bind-value:event="oninput" />
        </div>

        <div class="mt-3">
            <button class="btn btn-primary" @onclick="@(() => ViewModel.AddCommand.Execute().Subscribe())">Add</button>
            <button class="btn btn-secondary" @onclick="@(() => ViewModel.ClearCommand.Execute().Subscribe())">Clear</button>
        </div>
    </div>
</div>

<h3 class="mt-4">Products List</h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @if (ViewModel.ProductList != null)
        {
            @foreach (var product in ViewModel.ProductList)
            {
                <tr>
                    <td>@product.Name</td>
                    <td>@product.Description</td>
                    <td>@product.Price.ToString("C")</td>
                </tr>
            }
        }
    </tbody>
</table>
